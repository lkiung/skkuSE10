<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="datasethas" targetNamespace="http://tempuri.org/datasethas.xsd" xmlns:mstns="http://tempuri.org/datasethas.xsd" xmlns="http://tempuri.org/datasethas.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Web.config" AppSettingsPropertyName="hasConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="hasConnectionString (Web.config)" ParameterPrefix="@" PropertyReference="AppConfig.System.Configuration.ConfigurationManager.0.ConnectionStrings.hasConnectionString.ConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="professorTableAdapter" GeneratorDataComponentClassName="professorTableAdapter" Name="professor" UserDataComponentName="professorTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="hasConnectionString (Web.config)" DbObjectName="has.dbo.professor" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[professor] WHERE (([id] = @Original_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[professor] ([login], [pw]) VALUES (@login, @pw)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@login" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="login" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@pw" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="pw" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, login, pw FROM dbo.professor</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[professor] SET [login] = @login, [pw] = @pw WHERE (([id] = @Original_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@login" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="login" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@pw" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="pw" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="login" DataSetColumn="login" />
              <Mapping SourceColumn="pw" DataSetColumn="pw" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="classTableAdapter" GeneratorDataComponentClassName="classTableAdapter" Name="class" UserDataComponentName="classTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="hasConnectionString (Web.config)" DbObjectName="has.dbo.class" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[class] WHERE (([id] = @Original_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[class] ([classnumber]) VALUES (@classnumber)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@classnumber" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="classnumber" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, classnumber FROM dbo.class</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[class] SET [classnumber] = @classnumber WHERE (([id] = @Original_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@classnumber" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="classnumber" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="classnumber" DataSetColumn="classnumber" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="hasConnectionString (Web.config)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[class] WHERE ([id] = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="has.dbo.class" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="hasConnectionString (Web.config)" DbObjectName="has.dbo.class" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByClassId" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByClassId" GeneratorSourceName="FillByClassId" GetMethodModifier="Public" GetMethodName="GetDataByClassId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByClassId" UserSourceName="FillByClassId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT id, classnumber FROM dbo.class WHERE id = @cid</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="cid" ColumnName="id" DataSourceName="has.dbo.class" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@cid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="hasConnectionString (Web.config)" DbObjectName="has.dbo.class" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillClassByPid" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetClassDataByPid" GeneratorSourceName="FillClassByPid" GetMethodModifier="Public" GetMethodName="GetClassDataByPid" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetClassDataByPid" UserSourceName="FillClassByPid">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT class.id, class.classnumber FROM class INNER JOIN professorhasclasses ON class.id = professorhasclasses.classid INNER JOIN professor ON professorhasclasses.profid = professor.id WHERE (professor.id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="has.dbo.professor" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="hasConnectionString (Web.config)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillClassByPidAndCid" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetClassDataByPidAndCid" GeneratorSourceName="FillClassByPidAndCid" GetMethodModifier="Public" GetMethodName="GetClassDataByPidAndCid" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetClassDataByPidAndCid" UserSourceName="FillClassByPidAndCid">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT class.id, class.classnumber, professorhasclasses.profid FROM class INNER JOIN professorhasclasses ON class.id = professorhasclasses.classid WHERE (professorhasclasses.profid = @pid) AND (class.id = @cid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="pid" ColumnName="profid" DataSourceName="has.dbo.professorhasclasses" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@pid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="profid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="cid" ColumnName="id" DataSourceName="has.dbo.class" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@cid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="hasConnectionString (Web.config)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="GetMaxId" Modifier="Public" Name="GetMaxId" QueryType="Scalar" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="GetMaxId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT MAX(id) AS maxid FROM class</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="hasConnectionString (Web.config)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[class] ([classnumber]) 
OUTPUT INSERTED.[id] INTO @newId 
VALUES (@classnumber)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="classnumber" ColumnName="classnumber" DataSourceName="has.dbo.class" DataTypeServer="nvarchar(MAX)" DbType="String" Direction="Input" ParameterName="@classnumber" Precision="0" ProviderType="NVarChar" Scale="0" Size="2147483647" SourceColumn="classnumber" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="professorhasclassesTableAdapter" GeneratorDataComponentClassName="professorhasclassesTableAdapter" Name="professorhasclasses" UserDataComponentName="professorhasclassesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="hasConnectionString (Web.config)" DbObjectName="has.dbo.professorhasclasses" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[professorhasclasses] ([profid], [classid]) VALUES (@profid, @classid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@profid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="profid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@classid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="classid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT profid, classid FROM dbo.professorhasclasses</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="profid" DataSetColumn="profid" />
              <Mapping SourceColumn="classid" DataSetColumn="classid" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="hasConnectionString (Web.config)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM professorhasclasses WHERE classid=@id</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="classid" DataSourceName="has.dbo.professorhasclasses" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="classid" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="hasConnectionString (Web.config)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[professorhasclasses] ([profid], [classid]) VALUES (@profid, @classid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="profid" ColumnName="profid" DataSourceName="has.dbo.professorhasclasses" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@profid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="profid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="classid" ColumnName="classid" DataSourceName="has.dbo.professorhasclasses" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@classid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="classid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="studentTableAdapter" GeneratorDataComponentClassName="studentTableAdapter" Name="student" UserDataComponentName="studentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="hasConnectionString (Web.config)" DbObjectName="has.dbo.student" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[student] WHERE (([id] = @Original_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[student] ([number], [name], [phone], [email]) VALUES (@number, @name, @phone, @email)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@number" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="number" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@phone" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="phone" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@email" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT id, number, name, phone, email FROM dbo.student</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[student] SET [number] = @number, [name] = @name, [phone] = @phone, [email] = @email WHERE (([id] = @Original_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@number" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="number" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@phone" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="phone" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@email" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="number" DataSetColumn="number" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="phone" DataSetColumn="phone" />
              <Mapping SourceColumn="email" DataSetColumn="email" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="hasConnectionString (Web.config)" DbObjectName="has.dbo.student" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillStudentByStudentId" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetStudentDataByStudentId" GeneratorSourceName="FillStudentByStudentId" GetMethodModifier="Public" GetMethodName="GetStudentDataByStudentId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetStudentDataByStudentId" UserSourceName="FillStudentByStudentId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT id, number, name, phone, email FROM dbo.student WHERE id = @sid</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="sid" ColumnName="id" DataSourceName="has.dbo.student" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@sid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="hasConnectionString (Web.config)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillStudentsByAlertId" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetStudentsDataByAlertId" GeneratorSourceName="FillStudentsByAlertId" GetMethodModifier="Public" GetMethodName="GetStudentsDataByAlertId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetStudentsDataByAlertId" UserSourceName="FillStudentsByAlertId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT * FROM student INNER JOIN classhasstudents ON student.id = classhasstudents.studentid INNER JOIN class ON classhasstudents.classid = class.id INNER JOIN alert ON class.id = alert.classid WHERE (alert.id = @aid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="aid" ColumnName="id" DataSourceName="has.dbo.alert" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@aid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Expr2" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="hasConnectionString (Web.config)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillStudentsByByPidAndCid" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetStudentsDataByPidAndCid" GeneratorSourceName="FillStudentsByByPidAndCid" GetMethodModifier="Public" GetMethodName="GetStudentsDataByPidAndCid" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetStudentsDataByPidAndCid" UserSourceName="FillStudentsByByPidAndCid">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT professor.id AS pid, class.id AS cid, student.id AS sid, student.number, student.name, student.phone, student.email FROM professor INNER JOIN professorhasclasses ON professor.id = professorhasclasses.profid INNER JOIN class ON professorhasclasses.classid = class.id INNER JOIN classhasstudents ON class.id = classhasstudents.classid INNER JOIN student ON classhasstudents.studentid = student.id WHERE (professor.id = @pid) AND (class.id = @cid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="pid" ColumnName="id" DataSourceName="has.dbo.professor" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@pid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="pid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="cid" ColumnName="id" DataSourceName="has.dbo.class" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@cid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="cid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="hasConnectionString (Web.config)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="GetMaxId" Modifier="Public" Name="GetMaxId" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="GetMaxId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT MAX(id) AS maxid FROM student</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="classhasstudentsTableAdapter" GeneratorDataComponentClassName="classhasstudentsTableAdapter" Name="classhasstudents" UserDataComponentName="classhasstudentsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="hasConnectionString (Web.config)" DbObjectName="has.dbo.classhasstudents" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[classhasstudents] ([classid], [studentid]) VALUES (@classid, @studentid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@classid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="classid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@studentid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studentid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT classid, studentid FROM dbo.classhasstudents</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="classid" DataSetColumn="classid" />
              <Mapping SourceColumn="studentid" DataSetColumn="studentid" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="hasConnectionString (Web.config)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[classhasstudents] ([classid], [studentid]) VALUES (@classid, @studentid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="classid" ColumnName="classid" DataSourceName="has.dbo.classhasstudents" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@classid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="classid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="studentid" ColumnName="studentid" DataSourceName="has.dbo.classhasstudents" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@studentid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="studentid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="alertTableAdapter" GeneratorDataComponentClassName="alertTableAdapter" Name="alert" UserDataComponentName="alertTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="hasConnectionString (Web.config)" DbObjectName="has.dbo.alert" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [alert] WHERE (([id] = @Original_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [alert] ([classid], [profid], [subject], [message], [added], [alertsent], [resent]) VALUES (@classid, @profid, @subject, @message, @added, @alertsent, @resent)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@classid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="classid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@profid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="profid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@subject" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="subject" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@message" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="message" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@added" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="added" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@alertsent" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="alertsent" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@resent" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="resent" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        id, classid, profid, subject, message, added, alertsent, resent
FROM            alert
WHERE        (classid = @cid) AND (profid = @pid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="cid" ColumnName="classid" DataSourceName="has.dbo.alert" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@cid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="classid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="pid" ColumnName="profid" DataSourceName="has.dbo.alert" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@pid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="profid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [alert] SET [classid] = @classid, [profid] = @profid, [subject] = @subject, [message] = @message, [added] = @added, [alertsent] = @alertsent, [resent] = @resent WHERE (([id] = @Original_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@classid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="classid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@profid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="profid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@subject" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="subject" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@message" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="message" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@added" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="added" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@alertsent" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="alertsent" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@resent" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="resent" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="classid" DataSetColumn="classid" />
              <Mapping SourceColumn="profid" DataSetColumn="profid" />
              <Mapping SourceColumn="subject" DataSetColumn="subject" />
              <Mapping SourceColumn="message" DataSetColumn="message" />
              <Mapping SourceColumn="added" DataSetColumn="added" />
              <Mapping SourceColumn="alertsent" DataSetColumn="alertsent" />
              <Mapping SourceColumn="resent" DataSetColumn="resent" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="hasConnectionString (Web.config)" DbObjectName="has.dbo.alert" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillAlertById" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetAlertDataById" GeneratorSourceName="FillAlertById" GetMethodModifier="Public" GetMethodName="GetAlertDataById" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetAlertDataById" UserSourceName="FillAlertById">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        id, classid, profid, subject, message, added, alertsent, resent
FROM            alert
WHERE        (id = @aid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="aid" ColumnName="id" DataSourceName="has.dbo.alert" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@aid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="hasConnectionString (Web.config)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQueryAlertSent" Modifier="Public" Name="UpdateQueryAlertSent" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="UpdateQueryAlertSent">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [alert] SET [alertsent] = @alertsent WHERE ([id] = @aid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="alertsent" ColumnName="alertsent" DataSourceName="has.dbo.alert" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@alertsent" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="alertsent" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="aid" ColumnName="id" DataSourceName="has.dbo.alert" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@aid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="datasethas" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="datasethas" msprop:Generator_UserDSName="datasethas">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="professor" msprop:Generator_TableClassName="professorDataTable" msprop:Generator_TableVarName="tableprofessor" msprop:Generator_TablePropName="professor" msprop:Generator_RowDeletingName="professorRowDeleting" msprop:Generator_RowChangingName="professorRowChanging" msprop:Generator_RowEvHandlerName="professorRowChangeEventHandler" msprop:Generator_RowDeletedName="professorRowDeleted" msprop:Generator_UserTableName="professor" msprop:Generator_RowChangedName="professorRowChanged" msprop:Generator_RowEvArgName="professorRowChangeEvent" msprop:Generator_RowClassName="professorRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="login" msprop:Generator_ColumnVarNameInTable="columnlogin" msprop:Generator_ColumnPropNameInRow="login" msprop:Generator_ColumnPropNameInTable="loginColumn" msprop:Generator_UserColumnName="login" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="pw" msprop:Generator_ColumnVarNameInTable="columnpw" msprop:Generator_ColumnPropNameInRow="pw" msprop:Generator_ColumnPropNameInTable="pwColumn" msprop:Generator_UserColumnName="pw" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="class" msprop:Generator_TableClassName="classDataTable" msprop:Generator_TableVarName="tableclass" msprop:Generator_TablePropName="_class" msprop:Generator_RowDeletingName="classRowDeleting" msprop:Generator_RowChangingName="classRowChanging" msprop:Generator_RowEvHandlerName="classRowChangeEventHandler" msprop:Generator_RowDeletedName="classRowDeleted" msprop:Generator_UserTableName="class" msprop:Generator_RowChangedName="classRowChanged" msprop:Generator_RowEvArgName="classRowChangeEvent" msprop:Generator_RowClassName="classRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="classnumber" msprop:Generator_ColumnVarNameInTable="columnclassnumber" msprop:Generator_ColumnPropNameInRow="classnumber" msprop:Generator_ColumnPropNameInTable="classnumberColumn" msprop:Generator_UserColumnName="classnumber" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="professorhasclasses" msprop:Generator_TableClassName="professorhasclassesDataTable" msprop:Generator_TableVarName="tableprofessorhasclasses" msprop:Generator_TablePropName="professorhasclasses" msprop:Generator_RowDeletingName="professorhasclassesRowDeleting" msprop:Generator_RowChangingName="professorhasclassesRowChanging" msprop:Generator_RowEvHandlerName="professorhasclassesRowChangeEventHandler" msprop:Generator_RowDeletedName="professorhasclassesRowDeleted" msprop:Generator_UserTableName="professorhasclasses" msprop:Generator_RowChangedName="professorhasclassesRowChanged" msprop:Generator_RowEvArgName="professorhasclassesRowChangeEvent" msprop:Generator_RowClassName="professorhasclassesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="profid" msprop:Generator_ColumnVarNameInTable="columnprofid" msprop:Generator_ColumnPropNameInRow="profid" msprop:Generator_ColumnPropNameInTable="profidColumn" msprop:Generator_UserColumnName="profid" type="xs:int" />
              <xs:element name="classid" msprop:Generator_ColumnVarNameInTable="columnclassid" msprop:Generator_ColumnPropNameInRow="classid" msprop:Generator_ColumnPropNameInTable="classidColumn" msprop:Generator_UserColumnName="classid" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="student" msprop:Generator_TableClassName="studentDataTable" msprop:Generator_TableVarName="tablestudent" msprop:Generator_TablePropName="student" msprop:Generator_RowDeletingName="studentRowDeleting" msprop:Generator_RowChangingName="studentRowChanging" msprop:Generator_RowEvHandlerName="studentRowChangeEventHandler" msprop:Generator_RowDeletedName="studentRowDeleted" msprop:Generator_UserTableName="student" msprop:Generator_RowChangedName="studentRowChanged" msprop:Generator_RowEvArgName="studentRowChangeEvent" msprop:Generator_RowClassName="studentRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="number" msprop:Generator_ColumnVarNameInTable="columnnumber" msprop:Generator_ColumnPropNameInRow="number" msprop:Generator_ColumnPropNameInTable="numberColumn" msprop:Generator_UserColumnName="number" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_UserColumnName="name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="phone" msprop:Generator_ColumnVarNameInTable="columnphone" msprop:Generator_ColumnPropNameInRow="phone" msprop:Generator_ColumnPropNameInTable="phoneColumn" msprop:Generator_UserColumnName="phone" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="11" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="email" msprop:Generator_ColumnVarNameInTable="columnemail" msprop:Generator_ColumnPropNameInRow="email" msprop:Generator_ColumnPropNameInTable="emailColumn" msprop:Generator_UserColumnName="email" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="classhasstudents" msprop:Generator_TableClassName="classhasstudentsDataTable" msprop:Generator_TableVarName="tableclasshasstudents" msprop:Generator_TablePropName="classhasstudents" msprop:Generator_RowDeletingName="classhasstudentsRowDeleting" msprop:Generator_RowChangingName="classhasstudentsRowChanging" msprop:Generator_RowEvHandlerName="classhasstudentsRowChangeEventHandler" msprop:Generator_RowDeletedName="classhasstudentsRowDeleted" msprop:Generator_UserTableName="classhasstudents" msprop:Generator_RowChangedName="classhasstudentsRowChanged" msprop:Generator_RowEvArgName="classhasstudentsRowChangeEvent" msprop:Generator_RowClassName="classhasstudentsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="classid" msprop:Generator_ColumnVarNameInTable="columnclassid" msprop:Generator_ColumnPropNameInRow="classid" msprop:Generator_ColumnPropNameInTable="classidColumn" msprop:Generator_UserColumnName="classid" type="xs:int" />
              <xs:element name="studentid" msprop:Generator_ColumnVarNameInTable="columnstudentid" msprop:Generator_ColumnPropNameInRow="studentid" msprop:Generator_ColumnPropNameInTable="studentidColumn" msprop:Generator_UserColumnName="studentid" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="alert" msprop:Generator_TableClassName="alertDataTable" msprop:Generator_TableVarName="tablealert" msprop:Generator_TablePropName="alert" msprop:Generator_RowDeletingName="alertRowDeleting" msprop:Generator_RowChangingName="alertRowChanging" msprop:Generator_RowEvHandlerName="alertRowChangeEventHandler" msprop:Generator_RowDeletedName="alertRowDeleted" msprop:Generator_UserTableName="alert" msprop:Generator_RowChangedName="alertRowChanged" msprop:Generator_RowEvArgName="alertRowChangeEvent" msprop:Generator_RowClassName="alertRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="classid" msprop:Generator_ColumnVarNameInTable="columnclassid" msprop:Generator_ColumnPropNameInRow="classid" msprop:Generator_ColumnPropNameInTable="classidColumn" msprop:Generator_UserColumnName="classid" type="xs:int" />
              <xs:element name="profid" msprop:Generator_ColumnVarNameInTable="columnprofid" msprop:Generator_ColumnPropNameInRow="profid" msprop:Generator_ColumnPropNameInTable="profidColumn" msprop:Generator_UserColumnName="profid" type="xs:int" />
              <xs:element name="subject" msprop:Generator_ColumnVarNameInTable="columnsubject" msprop:Generator_ColumnPropNameInRow="subject" msprop:Generator_ColumnPropNameInTable="subjectColumn" msprop:Generator_UserColumnName="subject" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="message" msprop:Generator_ColumnVarNameInTable="columnmessage" msprop:Generator_ColumnPropNameInRow="message" msprop:Generator_ColumnPropNameInTable="messageColumn" msprop:Generator_UserColumnName="message" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="added" msprop:Generator_ColumnVarNameInTable="columnadded" msprop:Generator_ColumnPropNameInRow="added" msprop:Generator_ColumnPropNameInTable="addedColumn" msprop:Generator_UserColumnName="added" type="xs:dateTime" />
              <xs:element name="alertsent" msprop:Generator_ColumnVarNameInTable="columnalertsent" msprop:Generator_ColumnPropNameInRow="alertsent" msprop:Generator_ColumnPropNameInTable="alertsentColumn" msprop:Generator_UserColumnName="alertsent" type="xs:dateTime" minOccurs="0" />
              <xs:element name="resent" msprop:Generator_ColumnVarNameInTable="columnresent" msprop:Generator_ColumnPropNameInRow="resent" msprop:Generator_ColumnPropNameInTable="resentColumn" msprop:Generator_UserColumnName="resent" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:professor" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="class_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:class" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="student_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:student" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="alert_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:alert" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="ClassHasProfessor" msdata:parent="class" msdata:child="professorhasclasses" msdata:parentkey="id" msdata:childkey="classid" msprop:Generator_UserChildTable="professorhasclasses" msprop:Generator_ChildPropName="GetprofessorhasclassesRows" msprop:Generator_UserRelationName="ClassHasProfessor" msprop:Generator_ParentPropName="classRow" msprop:Generator_RelationVarName="relationClassHasProfessor" msprop:Generator_UserParentTable="class" />
      <msdata:Relationship name="ProfessorHasClass" msdata:parent="professor" msdata:child="professorhasclasses" msdata:parentkey="id" msdata:childkey="profid" msprop:Generator_UserChildTable="professorhasclasses" msprop:Generator_ChildPropName="GetprofessorhasclassesRows" msprop:Generator_UserRelationName="ProfessorHasClass" msprop:Generator_ParentPropName="professorRow" msprop:Generator_RelationVarName="relationProfessorHasClass" msprop:Generator_UserParentTable="professor" />
      <msdata:Relationship name="classhasstudent" msdata:parent="class" msdata:child="classhasstudents" msdata:parentkey="id" msdata:childkey="classid" msprop:Generator_UserChildTable="classhasstudents" msprop:Generator_ChildPropName="GetclasshasstudentsRows" msprop:Generator_UserRelationName="classhasstudent" msprop:Generator_ParentPropName="classRow" msprop:Generator_RelationVarName="relationclasshasstudent" msprop:Generator_UserParentTable="class" />
      <msdata:Relationship name="studenthasclass" msdata:parent="student" msdata:child="classhasstudents" msdata:parentkey="id" msdata:childkey="studentid" msprop:Generator_UserChildTable="classhasstudents" msprop:Generator_ChildPropName="GetclasshasstudentsRows" msprop:Generator_UserRelationName="studenthasclass" msprop:Generator_ParentPropName="studentRow" msprop:Generator_RelationVarName="relationstudenthasclass" msprop:Generator_UserParentTable="student" />
      <msdata:Relationship name="FK_alert_class" msdata:parent="class" msdata:child="alert" msdata:parentkey="id" msdata:childkey="classid" msprop:Generator_UserChildTable="alert" msprop:Generator_ChildPropName="GetalertRows" msprop:Generator_UserRelationName="FK_alert_class" msprop:Generator_ParentPropName="classRow" msprop:Generator_RelationVarName="relationFK_alert_class" msprop:Generator_UserParentTable="class" />
      <msdata:Relationship name="FK_alert_professor" msdata:parent="professor" msdata:child="alert" msdata:parentkey="id" msdata:childkey="profid" msprop:Generator_UserChildTable="alert" msprop:Generator_ChildPropName="GetalertRows" msprop:Generator_UserRelationName="FK_alert_professor" msprop:Generator_ParentPropName="professorRow" msprop:Generator_RelationVarName="relationFK_alert_professor" msprop:Generator_UserParentTable="professor" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>